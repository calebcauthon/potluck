<html>
  <head>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
  </head>
  <div id="app" v-on:load="randomizeMeal()">
    <div class="lucky">
      <button class="orange-flat-button" v-on:click="randomizeMeal()">Change it up</button>
    </div>
    <div class="lucky">
      <button class="peter-river-flat-button" v-on:click="showRecipe()">Gimme the Recipe</button>
    </div>
    <div class="recipes" v-if="isShowingRecipe">
      <div class="recipe">
        <div v-for="ingredient in ingredients">
          <h1>{{ ingredient.name }}</h1>
          <iframe width="560" height="315" v-bind:src="ingredient.recipeURL" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
        </div>
      </div>
    </div>
    <div class="ingredients" v-if="isShowingIngredients">
      <div class="ingredient grain">
        <div class="background">
          <img v-bind:src="grain.image" />
          <span class="category">Grain</span>
        </div>
        <div class="name">{{ grain.name }}</div>
      </div>
      <div class="ingredient veggie">
        <div class="background">
          <img v-bind:src="veggie1.image" />
          <span class="category">Veggie #1</span>
        </div>
        <div class="name">{{ veggie1.name }}</div>
      </div>
      <div class="ingredient veggie">
        <div class="background">
          <img v-bind:src="veggie2.image" />
          <span class="category">Veggie #2</span>
        </div>
        <div class="name">{{ veggie2.name }}</div>
      </div>
      <div class="ingredient">
        <div class="background">
          <img v-bind:src="sauce.image" />
          <span class="category">Sauce</span>
        </div>
        <div class="name">{{ sauce.name }}</div>
      </div>
      <div class="ingredient">
        <div class="background">
          <img v-bind:src="bean.image" />
          <span class="category">Bean</span>
        </div>
        <div class="name">{{ bean.name }}</div>
      </div>
    </div>
  </div>
</html>

<script type="text/javascript" src="/data.js"></script>
<script type="text/javascript">
  var app = new Vue({
    el: '#app',
    data: {
      grain: null,
      veggie1: null,
      veggie2: null,
      sauce: null,
      bean: null,
      isShowingRecipe: false,
      isShowingIngredients: true,
      ingredients: []
    },
    beforeMount() {
      this.randomizeMeal();
    },
    methods: {
      randomizeMeal: function() {
        this.pickRandomGrain();
        this.pickRandomVeggie();
        this.pickRandomSauce();
        this.pickRandomBean();
        this.ingredients = [this.grain, this.veggie1, this.veggie2, this.sauce, this.bean];
        this.showIngredients();
      },
      pickRandomGrain: function () {
        this.grain = findRandomThing(grains);
      },
      pickRandomVeggie: function () {
        this.veggie1 = findRandomThing(veggies);
        this.veggie2 = findRandomThing(veggies);

        while (this.veggie2 == this.veggie1) {
          this.veggie2 = findRandomThing(veggies);
        }
      },
      pickRandomSauce: function () {
        this.sauce = findRandomThing(sauces);
      },
      pickRandomBean: function () {
        this.bean = findRandomThing(beans);
      },
      showRecipe: function() {
        this.isShowingIngredients = false;
        this.isShowingRecipe = true;
      },
      showIngredients: function() {
        this.isShowingRecipe = false;
        this.isShowingIngredients = true;
      }
    }
  });

  function findRandomThing(things) {
    var max = things.length - 1;
    var randomNumber = Math.floor(Math.random() * (Math.floor(max) + 1));
    return things[randomNumber];
  }
</script>
<script>
(function(name,path,ctx){var latest,prev=name!=='Keen'&&window.Keen?window.Keen:false;ctx[name]=ctx[name]||{ready:function(fn){var h=document.getElementsByTagName('head')[0],s=document.createElement('script'),w=window,loaded;s.onload=s.onerror=s.onreadystatechange=function(){if((s.readyState&&!(/^c|loade/.test(s.readyState)))||loaded){return}s.onload=s.onreadystatechange=null;loaded=1;latest=w.Keen;if(prev){w.Keen=prev}else{try{delete w.Keen}catch(e){w.Keen=void 0}}ctx[name]=latest;ctx[name].ready(fn)};s.async=1;s.src=path;h.parentNode.insertBefore(s,h)}}
})('KeenAsync','https://d26b395fwzu5fz.cloudfront.net/keen-tracking-1.4.2.min.js',this);

KeenAsync.ready(function(){
  var client = new KeenAsync({
    projectId: '5b402e9dc9e77c00010b6003',
    writeKey: '4AE4648B3F6D480915B8B13110A193BB21FA317ADF82D95F619A71BCFDBF147ED537C54B982FF4DCF2762CEFCF49C5F5833DF0E6BDAC25A22A48F6C1E6BCBECFC3E69E188FA7F60951464A2B4C8B4274977F42123CB49FDA6029D3FE1D18FF6B'
  });

  client.initAutoTracking();
});
</script>

<style>
html { font-family: sans-serif; }
.ingredient {
  width: 100%; border-bottom: 1px solid #ccc; padding: 1rem 0;
  max-height: 25%;
  text-align: center;
  font-family: sans-serif;
}
.ingredient .background { font-size: 5rem; position: absolute; text-transform: uppercase; }
.ingredient .background .category { opacity: .1; }
.ingredient .background img { max-height: 5rem; overflow: hidden; width: 5rem; z-index: 5; opacity: 1; margin: 0 auto; }
.ingredient .name { font-size: 5rem; text-align: right; text-transform: lowercase; z-index: 10; position: relative }

div.lucky { width: 100%; }
button.lucky { margin: 0 auto; display: block; height: 3rem; background: pink; border: none; color: #ccc; }

/* #Peter River Flat Button
==================================================*/
.peter-river-flat-button {
  position: relative;
  vertical-align: top;
  width: 100%;
  height: 60px;
  padding: 0;
  font-size: 22px;
  color: white;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.25);
  background: #3498db;
  border: 0;
  border-bottom: 2px solid #2a8bcc;
  cursor: pointer;
  -webkit-box-shadow: inset 0 -2px #2a8bcc;
  box-shadow: inset 0 -2px #2a8bcc;
}
.peter-river-flat-button:active {
  top: 1px;
  outline: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}

/* #Orange Flat Button
==================================================*/
.orange-flat-button {
  position: relative;
  vertical-align: top;
  width: 100%;
  height: 60px;
  padding: 0;
  font-size: 22px;
  color: white;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.25);
  background: #f39c12;
  border: 0;
  border-bottom: 2px solid #e8930c;
  cursor: pointer;
  -webkit-box-shadow: inset 0 -2px #e8930c;
  box-shadow: inset 0 -2px #e8930c;
}
.orange-flat-button:active {
  top: 1px;
  outline: none;
  -webkit-box-shadow: none;
  box-shadow: none;
}

</style>